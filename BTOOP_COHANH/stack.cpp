// Class automatically generated by Dev-C++ New Class wizard

#include "stack.h" // class's header file

// class constructor
stack::stack(int max):maxSize(max){
	top=NULL;
	size=0;
	}
stack::stack(const stack &obj):maxSize(obj.maxSize){
	node *t_top=NULL,*tem=obj.top;
	if (obj.top!=NULL) t_top=new node;
	int v=0;
	top=t_top;
	while (tem!=NULL){	
		v=tem->GetItem();
		t_top->SetItem(v);
		if (tem->GetNext()==NULL) t_top->SetNext(NULL);
		else{
			t_top->SetNext(new node);
			t_top=t_top->GetNext();
			}
			tem=tem->GetNext(); 
		}
	}
// class destructor
stack::~stack()
{
	node *tem=top;
	while (top!=NULL){
		tem=top;		
		top=top->GetNext();
		delete tem;		
		}
}
void stack::Pus(int v){
	if (size==maxSize) cout<<endl<<"Stack is full !"<<endl;
	else{
		node *t=new node;
		t->SetItem(v);
		t->SetNext(top);
		top=t;
		size++;
		}
	}
int stack::Pop(){
	int tem;
	if (size==0) {
		cout<<endl<<"Stack is empty !!"<<endl;
		tem=-1;
		}
	else{
		tem=top->GetItem();
		top=top->GetNext();
		}
	return tem;
	}
bool stack::IsEmpty() const{
	return !size;
	}
bool stack::IsFull()const{
	return (size==maxSize);
	}
int stack::NumOfElement() const{
	return size;
	};
void stack::Print()const{
	node *tem=top;
	while (tem){
		tem->Print();
		tem=tem->GetNext();
		if (tem) cout<<" --> ";
		};
		cout<<endl;
	};
