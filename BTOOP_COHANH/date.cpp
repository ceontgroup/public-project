// Class automatically generated by Dev-C++ New Class wizard

#include "date.h" // class's header file
#include <iostream>
#include <ctime>
using namespace std;
// class constructor
date::date(int d,int m,int y){
	if (!Valid(d,m,y)){
		time_t t=time(0);
		tm *now=localtime(&t);
		day=now->tm_mday;
		month=now->tm_mon +1;
		year=now->tm_year + 1900;
		}
		else
		{
		day=d;
		month=m;
		year=y;
		}
	}
// class destructor
date::~date(){}

int date::GetDay() const{
	return day;
	}
int date::GetMonth()const{
	return month;
	}
int date::GetYear()const{
	return year;
	}
bool date::IsLeapYear(int y) const{
	return (!(y%4)&&(y%100) || !(y%400));
	}
bool date::IsLeapYear()const{
	return IsLeapYear(year);
	}
int date::MonthDays(int m,int y)const{
	if (m ==0 && y==-1)
	{
		m=month;
		y=year;
	}
	switch(m){
		case 4:
		case 6:
		case 9:
		case 11: return 30;
		case 2: return 28 + IsLeapYear(y);
		default: return 31;
		}
	}
bool date::Valid(int d,int m,int y)const{
	return !(y<0 || m<1 || m>12 || d<1 || d>MonthDays(m,y));
	}
bool date::SetDay(int d){
	if (Valid(d,this->month,this->year)){
		day=d;
		return true;
		}
	return false;
	}
bool date::SetMonth(int m){
	if (Valid(this->day,m,this->year)){
		month=m;
		return true;
		}
	return false;
	}
bool date::SetYear(int y){
	if (Valid(this->day,this->month,y)){
		year=y;
		return true;
		}
	return false;
	}
bool date::SetDate(int m,int d,int y){
	if (Valid(m,d,y)){
		month=m;
		day=d;
		year=y;
		return true;
		};
		return false;
	}
void date::Print()const{
	cout<<endl<<day<<"/"<<month<<"/"<<year;
	}
int date::NextDay(){
	if (day==MonthDays()){
		if (month==12){
			day=1;
			month=1;
			year++;
			}
		else{
			month++;
			day=1;
			}
		}
	else day++;
	return day;
	}
int date::PrevDay(){
	if (day==1){
		if (month==1){
			year--;
			month=12;
			day=MonthDays();
			}
		else{
			month--;
			day=MonthDays();
			}
		}
	else day--;
	return day;	
	}
