// Class automatically generated by Dev-C++ New Class wizard

#ifndef MATRIX_H
#define MATRIX_H

/*
 * Class Matrix
 * Author: Kem
 */
#include <assert.h>
#include <iomanip>
#include <iostream>
#define row(i,col) (i/col)
#define col(i,col) (i%col)
using namespace std;
template <class T>
class matrix
{
	protected:
		const int n,m;
		int v;
		T *arr;
		static int id;
	public:
		// class constructor
		 
		matrix(int ,int );
		// class destructor  
		~matrix();
		matrix(const matrix &);
		const matrix operator=(const matrix &);
		matrix operator+(const matrix &) const;		
		matrix operator-(const matrix &) const;
		matrix operator*(T) const;
		matrix operator*(const matrix&) const;	
//		friend matrix operator*<T>(T,const matrix &);
		template <class R, class S>
		friend matrix<R> operator*(S,const matrix<R> &);
		template <class S>
		friend istream &operator>>(istream &,matrix<S> &);
		template <class S>
		friend ostream &operator<<(ostream &,const matrix<S> &);
		T &operator[](int)const;		
		T &operator()(int,int)const;
		float operator~()const;
		static int ID(){ return id;};					
};

#endif // MATRIX_H
