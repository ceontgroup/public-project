// Class automatically generated by Dev-C++ New Class wizard

#include "polynomial.h" // class's header file
#include <math.h>
#include <iomanip>
// class constructor
template<class T>
polynomial<T>::polynomial(int n):vector<T>(n+1){}

// class destructor
template<class T>
polynomial<T>::~polynomial(){}
template<class S>
istream &operator>>(istream &is,polynomial<S> &obj){
	for (int i=0;i<obj.n;i++){
		cout<<"he so x"<<i<<"= ";
		is>>obj[i];
		}
	return is;	
	};
template<class S>
ostream &operator<<(ostream &os,const polynomial<S> &obj){
	os<<" f(x) = ";
	for(int i=obj.n-1;i>0;i--){
		os<<setprecision(3)<<obj[i]<<"x^"<<i<<" + ";
		} 
	os<<obj[0];	
	return os;	
	};
template<class T>
float polynomial<T>::operator()(int x0)const{
	float t=0;
	for(int i=0;i<this->n;i++) t+=this->arr[i]*pow(x0,i);
	return t;
	};
